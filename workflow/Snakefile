import pandas as pd


configfile: "config/config.yaml"


samples = pd.read_csv(config["samples"], sep="\t", comment="#")


rule all:
    input:
        collect("results/fhir/{sample}.{fmt}", sample=samples["sample"], fmt="yaml"),


rule get_genome:
    output:
        "resources/genome.fasta",
    params:
        species="homo_sapiens",
        datatype="dna",
        build=lookup("ref/build", within=config),
        release=lookup("ref/release", within=config),
    log:
        "logs/get_genome.log",
    cache: "omit-software"  # save space and time with between workflow caching (see docs)
    wrapper:
        "v6.2.0/bio/reference/ensembl-sequence"


rule get_vep_cache:
    output:
        directory("resources/vep/cache"),
    params:
        species="homo_sapiens",
        build=lookup("ref/build", within=config),
        release=lookup("ref/release", within=config),
    log:
        "logs/vep/cache.log",
    cache: "omit-software"
    wrapper:
        "v6.2.0/bio/vep/cache"


rule get_vep_plugins:
    output:
        directory("resources/vep/plugins"),
    params:
        release=lookup("ref/release", within=config),
    wrapper:
        "v6.2.0/bio/vep/plugins"


rule annotate_variants:
    input:
        calls=lookup(query="sample == '{sample}'", within=samples, cols=["calls"]),  # .vcf, .vcf.gz or .bcf
        cache="resources/vep/cache",
        plugins="resources/vep/plugins",
        fasta="resources/genome.fasta",
    output:
        calls="results/annotated/{sample}.bcf",
        stats="results/annotated/{sample}.html",
    params:
        plugins=[],
        # The following flags add all fields required by vembrane fhir.
        # --numbers, --symbol, and --hgvs are part of --everything as well.
        extra="--numbers --symbol --hgvs --hgvsg",
    log:
        "logs/vep/annotate/{sample}.log",
    threads: 4
    wrapper:
        "v6.2.0/bio/vep/annotate"


rule vembrane_fhir:
    input:
        "results/annotated/{sample}.bcf",
    output:
        "results/fhir/{sample}.{fmt}",
    log:
        "logs/vembrane/fhir/{sample}/{fmt}.log",
    params:
        build=lookup("ref/build", within=config),
    conda:
        "envs/vembrane.yaml"
    shell:
        "vembrane fhir {input} {wildcards.sample} {params.build} --profile mii_molgen "
        "--output-fmt {wildcards.fmt} > {output} 2> {log}"
